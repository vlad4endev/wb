const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function executeSQL() {
  try {
    console.log('üîÑ –í—ã–ø–æ–ª–Ω—è–µ–º SQL –∑–∞–ø—Ä–æ—Å...');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const updateResult = await prisma.$executeRaw`
      UPDATE users 
      SET 
        role = 'DEVELOPER',
        is_protected = true,
        updated_at = NOW()
      WHERE id = 'cmfbry14q0000136cf6k6yhu2'
    `;
    
    console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π:', updateResult);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const user = await prisma.user.findUnique({
      where: { id: 'cmfbry14q0000136cf6k6yhu2' },
      select: {
        id: true,
        email: true,
        name: true,
        role: true,
        isProtected: true,
        updatedAt: true
      }
    });
    
    if (user) {
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω:');
      console.log('üë§ ID:', user.id);
      console.log('üìß Email:', user.email);
      console.log('üë§ –ò–º—è:', user.name);
      console.log('üîë –†–æ–ª—å:', user.role);
      console.log('üõ°Ô∏è –ó–∞—â–∏—â–µ–Ω:', user.isProtected);
      console.log('üìÖ –û–±–Ω–æ–≤–ª–µ–Ω:', user.updatedAt);
    } else {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  } finally {
    await prisma.$disconnect();
  }
}

executeSQL();
