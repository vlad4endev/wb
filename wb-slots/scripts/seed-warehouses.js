const { PrismaClient } = require('@prisma/client');

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
require('dotenv').config();

const prisma = new PrismaClient();

const warehouses = [
  { id: 206236, name: '–ë–µ–ª—ã–µ –°—Ç–æ–ª–±—ã' },
  { id: 301981, name: '–í–ª–∞–¥–∏–º–∏—Ä –í–æ—Ä—à–∏–Ω—Å–∫–æ–µ' },
  { id: 301983, name: '–í–æ–ª–≥–æ–≥—Ä–∞–¥' },
  { id: 301808, name: '–í–æ—Ä–æ–Ω–µ–∂' },
  { id: 365116, name: '–í–æ—Ä–æ–Ω–µ–∂ –°–ì–¢' },
  { id: 317470, name: '–ì–æ–ª–∏—Ü—ã–Ω–æ –°–ì–¢' },
  { id: 1733, name: '–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥ - –ò—Å–ø—ã—Ç–∞—Ç–µ–ª–µ–π 14–≥' },
  { id: 300571, name: '–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥ - –ü–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω—ã–π 12/2' },
  { id: 117986, name: '–ö–∞–∑–∞–Ω—å' },
  { id: 507, name: '–ö–æ–ª–µ–¥–∏–Ω–æ' },
  { id: 301809, name: '–ö–æ—Ç–æ–≤—Å–∫' },
  { id: 130744, name: '–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä (–¢–∏—Ö–æ—Ä–µ—Ü–∫–∞—è)' },
  { id: 305087, name: '–ö—É–∑–Ω–µ—Ü–∫ –°–ì–¢' },
  { id: 208277, name: '–ù–µ–≤–∏–Ω–Ω–æ–º—ã—Å—Å–∫' },
  { id: 301805, name: '–ù–æ–≤–æ—Å–µ–º–µ–π–∫–∏–Ω–æ' },
  { id: 686, name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫' },
  { id: 50086256, name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ –°–ì–¢' },
  { id: 218210, name: '–û–±—É—Ö–æ–≤–æ' },
  { id: 312617, name: '–û–±—É—Ö–æ–≤–æ –°–ì–¢' },
  { id: 117501, name: '–ü–æ–¥–æ–ª—å—Å–∫' },
  { id: 218623, name: '–ü–æ–¥–æ–ª—å—Å–∫ 3' },
  { id: 301229, name: '–ü–æ–¥–æ–ª—å—Å–∫ 4' },
  { id: 300169, name: '–†–∞–¥—É–º–ª—è –°–ì–¢' },
  { id: 301760, name: '–†—è–∑–∞–Ω—å (–¢—é—à–µ–≤—Å–∫–æ–µ)' },
  { id: 300862, name: '–°–¶ –ê–±–∞–∫–∞–Ω 2' },
  { id: 214951, name: '–°–¶ –ê—Ä—Ç–µ–º' },
  { id: 302769, name: '–°–¶ –ê—Ä—Ö–∞–Ω–≥–µ–ª—å—Å–∫ (—É–ª –õ–µ–Ω–∏–Ω–∞)' },
  { id: 169872, name: '–°–¶ –ê—Å—Ç—Ä–∞—Ö–∞–Ω—å' },
  { id: 302988, name: '–°–¶ –ê—Å—Ç—Ä–∞—Ö–∞–Ω—å (–°–æ–ª—è–Ω–∫–∞)' },
  { id: 302737, name: '–°–¶ –ë–∞—Ä–Ω–∞—É–ª' },
  { id: 205228, name: '–°–¶ –ë–µ–ª–∞—è –î–∞—á–∞' },
  { id: 210557, name: '–°–¶ –ë–µ–ª–æ–≥–æ—Ä—Å–∫' },
  { id: 158751, name: '–°–¶ –í–ª–∞–¥–∏–∫–∞–≤–∫–∞–∑' },
  { id: 144649, name: '–°–¶ –í–ª–∞–¥–∏–º–∏—Ä' },
  { id: 210127, name: '–°–¶ –í–Ω—É–∫–æ–≤–æ' },
  { id: 300219, name: '–°–¶ –í–æ–ª–æ–≥–¥–∞ 2' },
  { id: 211415, name: '–°–¶ –í–æ—Ä–æ–Ω–µ–∂' },
  { id: 210515, name: '–°–¶ –í—ë—à–∫–∏' },
  { id: 218402, name: '–°–¶ –ò–≤–∞–Ω–æ–≤–æ' },
  { id: 218628, name: '–°–¶ –ò–∂–µ–≤—Å–∫' },
  { id: 131643, name: '–°–¶ –ò—Ä–∫—É—Ç—Å–∫' },
  { id: 117442, name: '–°–¶ –ö–∞–ª—É–≥–∞' },
  { id: 213849, name: '–°–¶ –ö–µ–º–µ—Ä–æ–≤–æ' },
  { id: 303219, name: '–°–¶ –ö–∏—Ä–æ–≤' },
  { id: 205985, name: '–°–¶ –ö—Ä—ã–ª–æ–≤—Å–∫–∞—è' },
  { id: 302335, name: '–°–¶ –ö—É–∑–Ω–µ—Ü–∫' },
  { id: 140302, name: '–°–¶ –ö—É—Ä—Å–∫' },
  { id: 160030, name: '–°–¶ –õ–∏–ø–µ—Ü–∫' },
  { id: 209211, name: '–°–¶ –ú–∞—Ö–∞—á–∫–∞–ª–∞' },
  { id: 361670, name: '–°–¶ –ú–∞—Ö–∞—á–∫–∞–ª–∞ –°–µ–ø–∞—Ä–∞—Ç–æ—Ä–Ω–∞—è' },
  { id: 205349, name: '–°–¶ –ú—É—Ä–º–∞–Ω—Å–∫' },
  { id: 204952, name: '–°–¶ –ù–∞–±–µ—Ä–µ–∂–Ω—ã–µ –ß–µ–ª–Ω—ã' },
  { id: 118535, name: '–°–¶ –ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥' },
  { id: 211470, name: '–°–¶ –ù–∏–∂–Ω–∏–π –¢–∞–≥–∏–ª' },
  { id: 206708, name: '–°–¶ –ù–æ–≤–æ–∫—É–∑–Ω–µ—Ü–∫' },
  { id: 340443, name: '–°–¶ –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ –î–æ–∫—É—á–∞–µ–≤–∞' },
  { id: 161520, name: '–°–¶ –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ –ü–∞—Å–µ—á–Ω–∞—è' },
  { id: 303221, name: '–°–¶ –ù–æ—è–±—Ä—å—Å–∫' },
  { id: 312807, name: '–°–¶ –û–±—É—Ö–æ–≤–æ 2' },
  { id: 168458, name: '–°–¶ –û–º—Å–∫' },
  { id: 315199, name: '–°–¶ –û—Ä–µ–Ω–±—É—Ä–≥ –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è' },
  { id: 216566, name: '–°–¶ –ü–µ—Ä–º—å 2' },
  { id: 209209, name: '–°–¶ –ü—Å–∫–æ–≤' },
  { id: 207743, name: '–°–¶ –ü—É—à–∫–∏–Ω–æ' },
  { id: 301920, name: '–°–¶ –ü—è—Ç–∏–≥–æ—Ä—Å–∫ (–≠—Ç–æ–∫–∞)' },
  { id: 218616, name: '–°–¶ –†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É' },
  { id: 117230, name: '–°–¶ –°–∞–º–∞—Ä–∞' },
  { id: 169537, name: '–°–¶ –°–µ—Ä–æ–≤' },
  { id: 333530, name: '–°–¶ –°–∏–º—Ñ–µ—Ä–æ–ø–æ–ª—å –ú–æ–ª–æ–¥–µ–∂–Ω–µ–Ω—Å–∫–æ–µ' },
  { id: 300987, name: '–°–¶ –°–º–æ–ª–µ–Ω—Å–∫ 3' },
  { id: 318294, name: '–°–¶ –°–æ—Ñ—å–∏–Ω–æ' },
  { id: 161003, name: '–°–¶ –°—É—Ä–≥—É—Ç' },
  { id: 209208, name: '–°–¶ –°—ã–∫—Ç—ã–≤–∫–∞—Ä' },
  { id: 117866, name: '–°–¶ –¢–∞–º–±–æ–≤' },
  { id: 117456, name: '–°–¶ –¢–≤–µ—Ä—å' },
  { id: 204615, name: '–°–¶ –¢–æ–º—Å–∫' },
  { id: 117819, name: '–°–¶ –¢—é–º–µ–Ω—å' },
  { id: 205104, name: '–°–¶ –£–ª—å—è–Ω–æ–≤—Å–∫' },
  { id: 149445, name: '–°–¶ –£—Ñ–∞' },
  { id: 218644, name: '–°–¶ –•–∞–±–∞—Ä–æ–≤—Å–∫' },
  { id: 218916, name: '–°–¶ –ß–µ–±–æ–∫—Å–∞—Ä—ã 2' },
  { id: 218225, name: '–°–¶ –ß–µ–ª—è–±–∏–Ω—Å–∫ 2' },
  { id: 311895, name: '–°–¶ –ß–µ—Ä–µ–ø–æ–≤–µ—Ü' },
  { id: 218674, name: '–°–¶ –ß–∏—Ç–∞ 2' },
  { id: 312259, name: '–°–¶ –®—É—à–∞—Ä—ã' },
  { id: 338827, name: '–°–¶ –Ø—Ä–æ—Å–ª–∞–≤–ª—å –ì—Ä–æ–º–æ–≤–∞' },
  { id: 2737, name: '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥ (–£—Ç–∫–∏–Ω–∞ –ó–∞–≤–æ–¥—å)' },
  { id: 50045612, name: '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥ –°–ì–¢' },
  { id: 301987, name: '–°–∞—Ä–∞–ø—É–ª' },
  { id: 332491, name: '–°–∫–ª–∞–¥ –í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫' },
  { id: 387234, name: '–°–∫–ª–∞–¥ –ò—Å—Ç—Ä–∞' },
  { id: 50107386, name: '–°–∫–ª–∞–¥ –ù–∏–∂–Ω–∏–π –¢–∞–≥–∏–ª: –í–æ—Å—Ç–æ—á–Ω–æ–µ –°–ì–¢' },
  { id: 50045246, name: '–°–∫–ª–∞–¥ –®—É—à–∞—Ä—ã' },
  { id: 50062129, name: '–°–æ—Ñ—Ä–∏–Ω–æ –°–ì–¢' },
  { id: 50049050, name: '–°–æ—Ñ—å–∏–Ω–æ –°–ì–¢' }
];

async function seedWarehouses() {
  try {
    console.log('–ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞ —Å–∫–ª–∞–¥–æ–≤...');
    
    // –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏
    await prisma.warehouse.deleteMany({});
    console.log('–°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏ —Å–∫–ª–∞–¥–æ–≤ —É–¥–∞–ª–µ–Ω—ã');
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Å–∫–ª–∞–¥—ã
    for (const warehouse of warehouses) {
      await prisma.warehouse.create({
        data: {
          id: warehouse.id,
          name: warehouse.name,
          isActive: true,
          createdAt: new Date(),
          updatedAt: new Date(),
        },
      });
    }
    
    console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ ${warehouses.length} —Å–∫–ª–∞–¥–æ–≤ –≤ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫`);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const totalWarehouses = await prisma.warehouse.count();
    console.log(`üìä –í—Å–µ–≥–æ —Å–∫–ª–∞–¥–æ–≤ –≤ –±–∞–∑–µ: ${totalWarehouses}`);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä–æ–≤
    const sampleWarehouses = await prisma.warehouse.findMany({
      take: 5,
      orderBy: { name: 'asc' }
    });
    
    console.log('\nüìã –ü—Ä–∏–º–µ—Ä—ã –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–∫–ª–∞–¥–æ–≤:');
    sampleWarehouses.forEach(wh => {
      console.log(`  ${wh.id} ‚Äî ${wh.name}`);
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞ —Å–∫–ª–∞–¥–æ–≤:', error);
  } finally {
    await prisma.$disconnect();
  }
}

seedWarehouses();
